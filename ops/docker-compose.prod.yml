version: '2'

services:
  postgres:
    environment:
      - POSTGRES_PASSWORD=${DJANGO_DB_PASSWORD}
      - POSTGRES_USER=${DJANGO_DB_USER}
      - POSTGRES_DB=${DJANGO_DB_NAME}
  redis:
    restart: always
    command: >
        redis-server --requirepass ${REDIS_PASSWORD}
  worker:
    restart: always
    depends_on:
      - redis
      - postgres
      - server
    environment:
      # can't use localhost because that always points to the current container. To talk to another container, its
      # network name is the service name
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - DEPLOY_ENV=ropsten
      - DJANGO_DB_NAME=${DJANGO_DB_NAME}
      - DJANGO_DB_USER=${DJANGO_DB_USER}
      - DJANGO_DB_PASSWORD=${DJANGO_DB_PASSWORD}
      - DJANGO_DB_HOST=postgres
      - DJANGO_DB_PORT=5432
      - GITHUB_ORGANIZATION=MycroCoin
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - INFURA_API_KEY=${INFURA_API_KEY}
  server:
    depends_on:
      - redis
      - postgres
    environment:
      # can't use localhost because that always points to the current container. To talk to another container, its
      # network name is the service name
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - DEPLOY_ENV=ropsten
      - DJANGO_DB_NAME=${DJANGO_DB_NAME}
      - DJANGO_DB_USER=${DJANGO_DB_USER}
      - DJANGO_DB_PASSWORD=${DJANGO_DB_PASSWORD}
      - DJANGO_DB_HOST=postgres
      - DJANGO_DB_PORT=5432
      - GITHUB_ORGANIZATION=MycroCoin
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - INFURA_API_KEY=${INFURA_API_KEY}
      - ETHEREUM_PRIVATE_KEY=${ETHEREUM_PRIVATE_KEY}
      - PYTHONUNBUFFERED=1
      - PROD=true
    command: >
      bash -c "./wait_for_it.sh postgres:5432 && ./manage.py migrate && uwsgi --http-auto-chunked --http-keepalive"
  frontend:
    command: >
      bash -c "truffle compile --all && cp -rf /mycro/build /mycro/src/ && npm run build && serve -s build -l 3000"
