version: '2'

services:
  parity:
    build:
      context: .
      dockerfile: parity-dev.Dockerfile
    # command: --light --chain ropsten --base-path /root/.local/share/io.parity.ethereum --unsafe-expose
    ports:
      - "8545:8545"
      - "8180:8180"
  postgres:
    image: postgres:10
    environment:
      - POSTGRES_PASSWORD=loltesting
      - POSTGRES_USER=user
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
  redis:
    image: redis:4
    ports:
      - "6379:6379"
    command: >
        redis-server --requirepass loltesting
  worker:
    environment:
      # can't use localhost because that always points to the current container. To talk to another container, its
      # network name is the service name
      - CELERY_BROKER_URL=redis://:loltesting@redis:6379/0
      - DEPLOY_ENV=parity
      - PARITY_ENDPOINT=http://parity:8545
      - DJANGO_DB_NAME=postgres
      - DJANGO_DB_USER=user
      - DJANGO_DB_PASSWORD=loltesting
      - DJANGO_DB_HOST=postgres
      - DJANGO_DB_PORT=5432
      - GITHUB_ORGANIZATION=MycroCoin-dev
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      # Infura API key isn't needed for local dev on parity
      - INFURA_API_KEY=""
    depends_on:
      - redis
      - postgres
      - server
      - parity
    build:
      context: .
      dockerfile: server.Dockerfile
      # TODO run the beat as a separate service instead of embedding in the worker
    command: >
      bash -c './wait_for_it.sh server:8000 && celery -A backend worker -l debug -B --scheduler django_celery_beat.schedulers:DatabaseScheduler'
  server:
    depends_on:
      - redis
      - postgres
      - parity
    environment:
      # can't use localhost because that always points to the current container. To talk to another container, its
      # network name is the service name
      - CELERY_BROKER_URL=redis://:loltesting@redis:6379/0
      - DEPLOY_ENV=parity
      - PARITY_ENDPOINT=http://parity:8545
      - DJANGO_DB_NAME=postgres
      - DJANGO_DB_USER=user
      - DJANGO_DB_PASSWORD=loltesting
      - DJANGO_DB_HOST=postgres
      - DJANGO_DB_PORT=5432
      - GITHUB_ORGANIZATION=MycroCoin-dev
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      # Infura API key isn't needed for local dev on parity
      - INFURA_API_KEY=""
      # TODO I don't think we need this
      # - ETHEREUM_PRIVATE_KEY=${ETHEREUM_PRIVATE_KEY}
      - PYTHONUNBUFFERED=1
      - DEBUG=true

    build:
      context: .
      dockerfile: server.Dockerfile
    ports:
      - "8000:8000"
    # https://stackoverflow.com/questions/30063907/using-docker-compose-how-to-execute-multiple-commands
    command: >
      bash -c "./wait_for_it.sh postgres:5432 && ./wait_for_it.sh parity:8545 && ./manage.py migrate && ./manage.py runserver 0.0.0.0:8000"
    volumes:
      - './backend:/mycro/backend'
  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    command: >
      bash -c "truffle compile --all && cp -rf /mycro/build /mycro/src/ && npm start"
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_GRAPHQL_ENDPOINT=http://localhost:8000/graphql
    volumes:
      - './frontend/src:/mycro/src'
